{
	"info": {
		"_postman_id": "a5c7e8f9-b2d3-4e6a-8c1f-d9e7f0b8a5c4",
		"name": "Motravel API Collection",
		"description": "API collection for the Motravel vehicle rental application",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"description": "Endpoints for user authentication",
			"item": [
				{
					"name": "Sign Up",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"testuser@example.com\",\n    \"password\": \"password123\",\n    \"roles\": [\"user\"]\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"signup"
							]
						},
						"description": "Register a new user"
					},
					"response": []
				},
				{
					"name": "Sign In",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/signin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"signin"
							]
						},
						"description": "Login and get JWT token"
					},
					"response": []
				}
			]
		},
		{
			"name": "Vehicles",
			"description": "Endpoints for vehicle management",
			"item": [
				{
					"name": "Get All Vehicles",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/vehicles",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"vehicles"
							]
						},
						"description": "Get all vehicles"
					},
					"response": []
				},
				{
					"name": "Get Vehicle By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/vehicles/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"vehicles",
								"1"
							]
						},
						"description": "Get vehicle by ID"
					},
					"response": []
				},
				{
					"name": "Get Available Vehicles",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/vehicles/available",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"vehicles",
								"available"
							]
						},
						"description": "Get all available vehicles"
					},
					"response": []
				},
				{
					"name": "Find Vehicles Near Location",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/vehicles/nearby?latitude=28.6139&longitude=77.2090&radius=5.0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"vehicles",
								"nearby"
							],
							"query": [
								{
									"key": "latitude",
									"value": "28.6139"
								},
								{
									"key": "longitude",
									"value": "77.2090"
								},
								{
									"key": "radius",
									"value": "5.0"
								}
							]
						},
						"description": "Find vehicles near a location within a specified radius (in km)"
					},
					"response": []
				},
				{
					"name": "Add New Vehicle",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"model\": \"Corolla\",\n    \"brand\": \"Toyota\",\n    \"type\": \"car\",\n    \"latitude\": 28.6239,\n    \"longitude\": 77.2190,\n    \"hourlyPrice\": 18.0,\n    \"imageUrl\": \"https://example.com/toyota-corolla.jpg\",\n    \"availability\": true\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/vehicles",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"vehicles"
							]
						},
						"description": "Add a new vehicle (Admin only)"
					},
					"response": []
				},
				{
					"name": "Update Vehicle",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"model\": \"Corolla\",\n    \"brand\": \"Toyota\",\n    \"type\": \"car\",\n    \"latitude\": 28.6239,\n    \"longitude\": 77.2190,\n    \"hourlyPrice\": 20.0,\n    \"imageUrl\": \"https://example.com/toyota-corolla.jpg\",\n    \"availability\": true\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/vehicles/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"vehicles",
								"1"
							]
						},
						"description": "Update a vehicle (Admin only)"
					},
					"response": []
				},
				{
					"name": "Update Vehicle Availability",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/vehicles/1/availability?availability=false",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"vehicles",
								"1",
								"availability"
							],
							"query": [
								{
									"key": "availability",
									"value": "false"
								}
							]
						},
						"description": "Update vehicle availability (Admin only)"
					},
					"response": []
				},
				{
					"name": "Delete Vehicle",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/vehicles/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"vehicles",
								"1"
							]
						},
						"description": "Delete a vehicle (Admin only)"
					},
					"response": []
				}
			]
		},
		{
			"name": "Bookings",
			"description": "Endpoints for booking management",
			"item": [
				{
					"name": "Get All Bookings",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/bookings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"bookings"
							]
						},
						"description": "Get all bookings (Admin only)"
					},
					"response": []
				},
				{
					"name": "Get Booking By ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/bookings/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"bookings",
								"1"
							]
						},
						"description": "Get booking by ID"
					},
					"response": []
				},
				{
					"name": "Get User Bookings",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/bookings/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"bookings",
								"user"
							]
						},
						"description": "Get bookings for the current user"
					},
					"response": []
				},
				{
					"name": "Create Booking",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"vehicleId\": 1,\n    \"startTime\": \"2025-08-10T10:00:00\",\n    \"endTime\": \"2025-08-10T14:00:00\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/bookings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"bookings"
							]
						},
						"description": "Create a new booking"
					},
					"response": []
				},
				{
					"name": "Update Booking Status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/bookings/1/status?status=CONFIRMED",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"bookings",
								"1",
								"status"
							],
							"query": [
								{
									"key": "status",
									"value": "CONFIRMED"
								}
							]
						},
						"description": "Update booking status (Admin only)"
					},
					"response": []
				},
				{
					"name": "Cancel Booking",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/bookings/1/cancel",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"bookings",
								"1",
								"cancel"
							]
						},
						"description": "Cancel a booking"
					},
					"response": []
				},
				{
					"name": "Check Vehicle Availability",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/bookings/check-availability?vehicleId=1&startTime=2025-08-10T10:00:00&endTime=2025-08-10T14:00:00",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"bookings",
								"check-availability"
							],
							"query": [
								{
									"key": "vehicleId",
									"value": "1"
								},
								{
									"key": "startTime",
									"value": "2025-08-10T10:00:00"
								},
								{
									"key": "endTime",
									"value": "2025-08-10T14:00:00"
								}
							]
						},
						"description": "Check if a vehicle is available for booking in a specific time range"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-extract JWT token from login response",
					"if (pm.response.code === 200 && pm.request.url.toString().includes('/api/auth/signin')) {",
					"    var jsonData = pm.response.json();",
					"    if (jsonData.token) {",
					"        pm.environment.set('jwt_token', jsonData.token);",
					"        console.log('JWT token saved to environment variable: jwt_token');",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "jwt_token",
			"value": "",
			"type": "string"
		}
	]
}
